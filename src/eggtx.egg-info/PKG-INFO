Metadata-Version: 2.4
Name: eggtx
Version: 0.1.0
Summary: Convert Egglog-style rewrite rules into formal inference rules, output as LaTeX.
Author: Swapnil Patel
License: MIT License
        
        Copyright (c) 2025 Swapnil Patel
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Dynamic: license-file

# eggtx
Convert Egglog-style rewrite rules into formal inference rules, output as LaTeX.
This package provides a tiny parser for simple rewrite files and a CLI that
emits a LaTeX representation of those rules.

## Development

This project uses `pre-commit` to run formatting and linting checks. After
installing the development dependencies with `pip install -e .[dev]`, install the
git hooks:

```bash
pre-commit install
```

The CI workflow will run the same checks and the test suite using `pytest`.
